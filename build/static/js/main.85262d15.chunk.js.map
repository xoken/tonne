{"version":3,"sources":["images/logo.png","Login.tsx","wallet/Wallet.js","wallet/NewWallet.js","wallet/ExistingWallet.js","App.tsx","serviceWorker.ts","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/httpClient.ts","../../src/Utils.ts","index.tsx"],"names":["module","exports","Login","id","className","htmlFor","type","placeholder","style","textAlign","value","Wallet","onCreateWallet","props","history","push","onImportWallet","onClick","this","React","Component","NewWallet","generateMnemonic","state","mnemonic","ExistingWallet","App","to","src","logo","alt","loading","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","path","component","Boolean","window","location","hostname","match","Symbol","iterator","asyncIterator","httpReq","a","baseURL","httpsAgent","https","rejectUnauthorized","headers","config","token","localStorage","error","console","Promise","utils","log","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.85262d15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5c81a1d6.png\";","import React from 'react';\n\nfunction Login() {\n  return (\n    <div id=\"authpop\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 col-lg-12\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Enter Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"username\"\n                placeholder=\"Enter username\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Enter Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"hostname\">Enter hostname</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"hostname\"\n                placeholder=\"hostname\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"port\">Enter Port number</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"portnumber\"\n                placeholder=\"port number\"\n              />\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <input\n                className=\"btn btn-primary\"\n                type=\"button\"\n                id=\"submitcredentials\"\n                value=\"Authenticate\"\n              />\n            </div>\n            <div id=\"authmessage\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nexport default class Wallet extends React.Component {\n  onCreateWallet = () => {\n    this.props.history.push('/wallet/new');\n  };\n\n  onImportWallet = () => {\n    this.props.history.push('/wallet/existing');\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"container wallet-container\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-sm-6\">\n              <div className=\"card text-center\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">I already have a seed phrase</h5>\n                  <p className=\"card-text\">\n                    Import your existing wallet using a 12 word seed phrase\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={this.onImportWallet}\n                  >\n                    Import wallet\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"card text-center\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Yes, let's get set up!</h5>\n                  <p className=\"card-text\">\n                    This will create a new wallet and seed phrase\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={this.onCreateWallet}\n                  >\n                    Create a Wallet\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <div id=\"pop\">\n          <div className=\"container\">\n            <span className=\"closepop\">X</span>\n            <div id=\"popupcontent\"></div>\n          </div>\n        </div>\n        <div className=\"container nonheader\">\n          <div className=\"row\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 border-left-right\">\n              <div id=\"cryptologo\"></div>\n              <span className=\"txbtn\" id=\"sendcur\">\n                Send\n              </span>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12 col-lg-12\">\n              <table id=\"txlist\"></table>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12 col-lg-12\">\n              <nav aria-label=\"transactions navigation\">\n                <ul\n                  className=\"pagination justify-content-center\"\n                  id=\"pagination\"\n                ></ul>\n              </nav>\n            </div>\n          </div>\n        </div> */}\n      </>\n    );\n  }\n}\n","import React from 'react';\n// import { utils } from 'nipkow-sdk';\n\nexport default class NewWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mnemonic: '',\n    };\n  }\n\n  generateMnemonic = () => {\n    // this.setState({ mnemonic: utils.generateMnemonic() });\n  };\n\n  render() {\n    return (\n      <div className=\"jumbotron\">\n        <h1 className=\"display-4\">Secret Backup Phrase</h1>\n        <p className=\"lead\">\n          Your secret backup phrase makes it easy to back up and restore your\n          account\n        </p>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-lg\"\n          onClick={this.generateMnemonic}\n        >\n          Generate Mnemonic\n        </button>\n        <p>{this.state.mnemonic}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class ExistingWallet extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"container wallet-container\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-sm-6\">\n              <div className=\"card text-center\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">I already have a seed phrase</h5>\n                  <p className=\"card-text\">\n                    Import your existing wallet using a 12 word seed phrase\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={this.onImportWallet}\n                  >\n                    Import wallet\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"card text-center\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Yes, let's get set up!</h5>\n                  <p className=\"card-text\">\n                    This will create a new wallet and seed phrase\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={this.onCreateWallet}\n                  >\n                    Create a Wallet\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport Login from './Login';\nimport Wallet from './wallet/Wallet';\nimport NewWallet from './wallet/NewWallet';\nimport ExistingWallet from './wallet/ExistingWallet';\nimport logo from './images/logo.png';\nexport default class App extends React.Component {\n  componentDidMount() {\n    // this.addScript('./scripts/index.js');\n    // this.addScript('./scripts/credentials.js');\n    // this.addScript('./scripts/auth.js');\n    // this.addScript('./scripts/httpsreq.js');\n    // this.addScript('./scripts/address.js');\n    // this.addScript('./scripts/transaction.js');\n    // this.addScript('./scripts/blockheight.js');\n    // this.addScript('./scripts/mnemonic.js');\n    // this.addScript('./scripts/search.js');\n    // this.addScript('./scripts/wallet.js');\n  }\n\n  // addScript(scriptSrc: string) {\n  //   const script = document.createElement('script');\n  //   script.src = scriptSrc;\n  //   document.body.appendChild(script);\n  // }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\n          <Link to=\"#\" id=\"logo\" className=\"navbar-brand\">\n            <img\n              src={logo}\n              className=\"d-inline-block align-top\"\n              alt=\"\"\n              loading=\"lazy\"\n            />\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\"></ul>\n            <form className=\"form-inline my-2 my-lg-0\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <Link to=\"#\" className=\"nav-link\">\n                    Contact <span className=\"sr-only\">(current)</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"#\" className=\"nav-link\">\n                    Help\n                  </Link>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </nav>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route exact path=\"/wallet\" component={Wallet} />\n        <Route exact path=\"/wallet/new\" component={NewWallet} />\n        <Route exact path=\"/wallet/existing\" component={ExistingWallet} />\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import https from 'https';\nimport axios, { AxiosRequestConfig } from 'axios';\n\nconst httpReq = axios.create({\n  baseURL: 'https://127.0.0.1:9091/v1',\n  httpsAgent: new https.Agent({\n    rejectUnauthorized: false,\n  }),\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nhttpReq.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    config.headers.Authorization = token ? `Bearer ${token}` : '';\n    return config;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\nexport const get = async (url: string, config?: AxiosRequestConfig) => {\n  try {\n    const response = await httpReq.get(url, config);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const post = async (\n  url: string,\n  data?: any,\n  config?: AxiosRequestConfig\n) => {\n  try {\n    const response = await httpReq.post(url, data, config);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const put = async (\n  url: string,\n  data?: any,\n  config?: AxiosRequestConfig\n) => {\n  try {\n    const response = await httpReq.put(url, data, config);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const deleteR = async (url: string, config?: AxiosRequestConfig) => {\n  try {\n    const response = await httpReq.delete(url, config);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import * as Bitcoin from 'bitcoinjs-lib';\nimport bip39 from 'bip39';\n\nclass Utils {\n  generateMnemonic = (): string => {\n    console.log(Bitcoin);\n    console.log(bip39);\n    return 'foo';\n    // return bip39.generateMnemonic();\n  };\n\n  // mnemonicToSeed = async (mnemonic: string) => {\n  //   const buffer = await bip39.mnemonicToSeed(mnemonic);\n  //   return buffer;\n  // };\n\n  // generateMasterPrivateKey = (seed: Buffer) => {\n  //   const BITCOIN_SV = {\n  //     bip32: {\n  //       public: 76067358,\n  //       private: 76066276,\n  //     },\n  //     messagePrefix: 'unused',\n  //     pubKeyHash: 0,\n  //     scriptHash: 5,\n  //     wif: 128,\n  //   };\n  //   return Bitcoin.bip32.fromSeed(seed, BITCOIN_SV);\n  // };\n\n  // calcBip32ExtendedKey = (path: string, bip32RootKey: any) => {\n  //   if (!bip32RootKey) {\n  //     return bip32RootKey;\n  //   }\n  //   var extendedKey = bip32RootKey;\n  //   var pathBits = path.split('/');\n  //   for (var i = 0; i < pathBits.length; i++) {\n  //     var bit = pathBits[i];\n  //     var index = parseInt(bit);\n  //     if (isNaN(index)) {\n  //       continue;\n  //     }\n  //     var hardened = bit[bit.length - 1] === \"'\";\n  //     var isPriv = !extendedKey.isNeutered();\n  //     var invalidDerivationPath = hardened && !isPriv;\n  //     if (invalidDerivationPath) {\n  //       extendedKey = null;\n  //     } else if (hardened) {\n  //       extendedKey = extendedKey.deriveHardened(index);\n  //     } else {\n  //       extendedKey = extendedKey.derive(index);\n  //     }\n  //   }\n  //   return extendedKey;\n  // };\n\n  // derivePath = (seed: Buffer, path: string) => {\n  //   return Bitcoin.bip32\n  //     .fromSeed(seed)\n  //     .derivePath(path)\n  //     .privateKey?.toString('hex');\n  // };\n}\n\nexport const utils = new Utils();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/App.css';\nimport './css/address.css';\nimport './css/blockheight.css';\nimport './css/index.css';\nimport './css/mnemonic.css';\nimport './css/scripthash.css';\nimport './css/transaction.css';\nimport './css/wallet.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { utils } from 'nipkow-sdk';\n// const mnemonic = utils.generateMnemonic();\nconsole.log(utils.generateMnemonic());\n// authAPI\n//   .login('admin', 'NjM5MDQyODIzMzc5MTAzNjgyOA')\n//   .then((data) => {\n//     console.log(data.auth.sessionKey);\n//     localStorage.setItem('token', data.auth.sessionKey);\n//     userAPI\n//       .getCurrentUser()\n//       .then((data) => console.log(data))\n//       .catch((err) => console.log(err));\n//   })\n//   .catch((err) => console.log(err));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}