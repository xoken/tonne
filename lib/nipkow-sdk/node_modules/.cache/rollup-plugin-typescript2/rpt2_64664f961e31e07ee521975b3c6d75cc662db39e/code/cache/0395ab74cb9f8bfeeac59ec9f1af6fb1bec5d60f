{"code":"import { get } from './httpClient';\r\nimport Qs from 'qs';\r\nclass AddressAPI {\r\n    constructor() {\r\n        this.getOutputsByAddress = async (address, pagesize, cursor) => {\r\n            try {\r\n                const { data } = await get(`address/${address}/outputs`, {\r\n                    params: { pagesize, cursor },\r\n                });\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.getOutputsByAddresses = async (addresses, pagesize, cursor) => {\r\n            try {\r\n                const { data } = await get(`addresses/outputs`, {\r\n                    params: {\r\n                        address: addresses,\r\n                        pagesize,\r\n                        cursor,\r\n                    },\r\n                    paramsSerializer: (params) => Qs.stringify(params, { arrayFormat: 'repeat' }),\r\n                });\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.getUTXOsByAddress = async (address, pagesize, cursor) => {\r\n            try {\r\n                const { data } = await get(`address/${address}/utxos`, {\r\n                    params: { pagesize, cursor },\r\n                });\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.getUTXOsByAddresses = async (addresses, pagesize, cursor) => {\r\n            try {\r\n                const { data } = await get(`addresses/utxos`, {\r\n                    params: {\r\n                        address: addresses,\r\n                        pagesize,\r\n                        cursor,\r\n                    },\r\n                    paramsSerializer: (params) => Qs.stringify(params, { arrayFormat: 'repeat' }),\r\n                });\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n    }\r\n}\r\nexport const addressAPI = new AddressAPI();\r\n//# sourceMappingURL=AddressAPI.js.map","references":["/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/src/httpClient.ts","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/node_modules/@types/qs/index.d.ts"],"map":"{\"version\":3,\"file\":\"AddressAPI.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/AddressAPI.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AACnC,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,MAAM,UAAU;IAAhB;QACE,wBAAmB,GAAG,KAAK,EACzB,OAAe,EACf,QAAiB,EACjB,MAAe,EACf,EAAE;YACF,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,WAAW,OAAO,UAAU,EAAE;oBACvD,MAAM,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;iBAC7B,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAEF,0BAAqB,GAAG,KAAK,EAC3B,SAAmB,EACnB,QAAiB,EACjB,MAAe,EACf,EAAE;YACF,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,mBAAmB,EAAE;oBAC9C,MAAM,EAAE;wBACN,OAAO,EAAE,SAAS;wBAClB,QAAQ;wBACR,MAAM;qBACP;oBACD,gBAAgB,EAAE,CAAC,MAAM,EAAE,EAAE,CAC3B,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;iBAClD,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAEF,sBAAiB,GAAG,KAAK,EACvB,OAAe,EACf,QAAiB,EACjB,MAAe,EACf,EAAE;YACF,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,WAAW,OAAO,QAAQ,EAAE;oBACrD,MAAM,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;iBAC7B,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,KAAK,EACzB,SAAmB,EACnB,QAAiB,EACjB,MAAe,EACf,EAAE;YACF,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,iBAAiB,EAAE;oBAC5C,MAAM,EAAE;wBACN,OAAO,EAAE,SAAS;wBAClB,QAAQ;wBACR,MAAM;qBACP;oBACD,gBAAgB,EAAE,CAAC,MAAM,EAAE,EAAE,CAC3B,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;iBAClD,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;IACJ,CAAC;CAAA;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC\"}"}
