{"code":"import { get } from './httpClient';\r\nimport Qs from 'qs';\r\nclass BlockAPI {\r\n    constructor() {\r\n        this.getBlockByBlockHeight = async (height) => {\r\n            try {\r\n                const { data } = await get(`block/height/${height}`);\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.getBlocksByBlockHeights = async (heights) => {\r\n            try {\r\n                const { data } = await get(`block/heights`, {\r\n                    params: {\r\n                        height: heights,\r\n                    },\r\n                    paramsSerializer: (params) => Qs.stringify(params, { arrayFormat: 'repeat' }),\r\n                });\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.getBlockByBlockHash = async (blockHash) => {\r\n            try {\r\n                const { data } = await get(`block/hash/${blockHash}`);\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.getBlocksByBlockHashes = async (blockHashes) => {\r\n            try {\r\n                const { data } = await get(`block/hashes`, {\r\n                    params: {\r\n                        hash: blockHashes,\r\n                    },\r\n                    paramsSerializer: (params) => Qs.stringify(params, { arrayFormat: 'repeat' }),\r\n                });\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n        this.getTXIDByHash = async (blockHash, pagenumber, pagesize) => {\r\n            try {\r\n                const { data } = await get(`block/txids/${blockHash}`, {\r\n                    params: {\r\n                        pagenumber,\r\n                        pagesize,\r\n                    },\r\n                });\r\n                return data;\r\n            }\r\n            catch (error) {\r\n                throw error;\r\n            }\r\n        };\r\n    }\r\n}\r\nexport const blockAPI = new BlockAPI();\r\n//# sourceMappingURL=BlockAPI.js.map","references":["/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/src/httpClient.ts","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/node_modules/@types/qs/index.d.ts"],"map":"{\"version\":3,\"file\":\"BlockAPI.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/BlockAPI.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AACnC,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,MAAM,QAAQ;IAAd;QACE,0BAAqB,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;YAC/C,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,gBAAgB,MAAM,EAAE,CAAC,CAAC;gBACrD,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAEF,4BAAuB,GAAG,KAAK,EAAE,OAAiB,EAAE,EAAE;YACpD,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,eAAe,EAAE;oBAC1C,MAAM,EAAE;wBACN,MAAM,EAAE,OAAO;qBAChB;oBACD,gBAAgB,EAAE,CAAC,MAAM,EAAE,EAAE,CAC3B,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;iBAClD,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAEF,wBAAmB,GAAG,KAAK,EAAE,SAAiB,EAAE,EAAE;YAChD,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,cAAc,SAAS,EAAE,CAAC,CAAC;gBACtD,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAEF,2BAAsB,GAAG,KAAK,EAAE,WAAqB,EAAE,EAAE;YACvD,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,cAAc,EAAE;oBACzC,MAAM,EAAE;wBACN,IAAI,EAAE,WAAW;qBAClB;oBACD,gBAAgB,EAAE,CAAC,MAAM,EAAE,EAAE,CAC3B,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;iBAClD,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,KAAK,EACnB,SAAiB,EACjB,UAAmB,EACnB,QAAiB,EACjB,EAAE;YACF,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,eAAe,SAAS,EAAE,EAAE;oBACrD,MAAM,EAAE;wBACN,UAAU;wBACV,QAAQ;qBACT;iBACF,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;IACJ,CAAC;CAAA;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC\"}"}
