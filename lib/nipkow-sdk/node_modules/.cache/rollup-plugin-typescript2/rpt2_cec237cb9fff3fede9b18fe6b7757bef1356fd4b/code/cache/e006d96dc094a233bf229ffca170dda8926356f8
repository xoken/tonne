{"code":"import CBOR from 'cbor-js';\r\nimport wallet from './Wallet';\r\nimport coinSelect from 'coinselect';\r\nimport { get, post } from './httpClient';\r\nimport * as Persist from './Persist';\r\nimport { transactionAPI } from './TransactionAPI';\r\nimport Config from './Config.json';\r\nclass Allpay {\r\n    async getPartiallySignTx(name, priceInSatoshi, isProducer) {\r\n        try {\r\n            const feeRate = 5;\r\n            const { utxos } = await Persist.getUTXOs();\r\n            const targets = [{ value: Number(priceInSatoshi) }];\r\n            let { inputs, outputs } = coinSelect(utxos, targets, feeRate);\r\n            if (!inputs || !outputs)\r\n                throw new Error('Empty inputs or outputs');\r\n            const nameCodePoints = [];\r\n            for (let i = 0; i < name.length; i++) {\r\n                nameCodePoints.push(name.codePointAt(i));\r\n            }\r\n            const paymentInputs = inputs.map((input) => {\r\n                return [\r\n                    {\r\n                        opTxHash: input.outputTxHash,\r\n                        opIndex: input.outputIndex,\r\n                    },\r\n                    input.value,\r\n                ];\r\n            });\r\n            const { unusedDerivedKeys } = await wallet.getUnusedDerivedKeys();\r\n            const currentUnusedKeyIndex = unusedDerivedKeys\r\n                ? unusedDerivedKeys[unusedDerivedKeys.length - 1].indexText\r\n                : null;\r\n            const { unusedDerivedKeys: nextUnusedDerivedKeys, } = await wallet.getUnusedDerivedKeys({\r\n                currentUnusedKeyIndex,\r\n            });\r\n            let outputOwner;\r\n            let outputChange;\r\n            if (unusedDerivedKeys.length > 0) {\r\n                outputOwner = unusedDerivedKeys[0].address;\r\n            }\r\n            if (nextUnusedDerivedKeys.length > 0) {\r\n                outputChange = nextUnusedDerivedKeys[0].address;\r\n            }\r\n            if (outputOwner && outputChange) {\r\n                const { data: { psaTx }, } = await post('partialsign', {\r\n                    paymentInputs,\r\n                    name: [nameCodePoints, isProducer ? true : false],\r\n                    outputOwner,\r\n                    outputChange,\r\n                });\r\n                return psaTx;\r\n            }\r\n            else {\r\n                throw new Error('Error configuring input params');\r\n            }\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    async decodeTransaction() {\r\n        const transactionHex = await this.getPartiallySignTx('sh', 5000, true);\r\n        const transaction = JSON.parse(Buffer.from(transactionHex, 'base64').toString());\r\n        await this.verifyRootTx(transaction);\r\n        // const data = [0, 1, [115, 104], [1, [0, 0], [0, [0, 1], [[0, 'XokenP2P', 'someuri_1']]], [[0, 'AllPay', 'Public', [0, 'XokenP2P', 'someuri_2'], [0, 'addrCommit', 'utxoCommit', 'signature', 876543]]]]]\r\n    }\r\n    async verifyRootTx(transaction) {\r\n        if (transaction) {\r\n            const resellerInput = transaction.ins[0].outpoint.hash;\r\n            const opReturnData = transaction.outs[0].script;\r\n            const allegoryDataBuffer = Buffer.from(opReturnData, 'hex');\r\n            const allegoryDataArrayBuffer = allegoryDataBuffer.buffer.slice(allegoryDataBuffer.byteOffset, allegoryDataBuffer.byteOffset + allegoryDataBuffer.byteLength);\r\n            const allegoryData = CBOR.decode(allegoryDataArrayBuffer);\r\n            const nameArray = allegoryData[2];\r\n            console.log(nameArray);\r\n            if (allegoryData[3].length === 4) {\r\n                const extensions = allegoryData[3][3];\r\n                console.log(extensions);\r\n            }\r\n            else {\r\n            }\r\n            if (resellerInput !== Config.allegoryRootNode) {\r\n                const { tx: { tx: { txInps, txOuts }, }, } = await transactionAPI.getTransactionByTxID(resellerInput);\r\n                const parentTransaction = { ins: txInps, outs: txOuts };\r\n                await this.verifyRootTx(parentTransaction);\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    async getOutpointByName(name) {\r\n        if (name) {\r\n            try {\r\n                const { data: { nameBranch }, } = await get(`allegory/${name}`);\r\n                if (nameBranch.length > 0) {\r\n                    return nameBranch;\r\n                }\r\n                else {\r\n                    await this.getOutpointByName(name.slice(0, -1));\r\n                }\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n}\r\nexport const allPay = new Allpay();\r\n//# sourceMappingURL=Allpay.js.map","references":["/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/node_modules/cbor-js/cbor.js","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/src/Wallet.ts","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/node_modules/coinselect/index.js","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/src/httpClient.ts","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/src/Persist.ts","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/src/TransactionAPI.ts","/home/xkn/Desktop/integration/nipkow/lib/nipkow-sdk/src/Config.json"],"map":"{\"version\":3,\"file\":\"Allpay.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/Allpay.ts\"],\"names\":[],\"mappings\":\"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\"}"}
